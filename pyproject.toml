# https://setuptools.readthedocs.io/en/latest/
[build-system]
requires = ["setuptools", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pycontrails"
authors = [
    {name = "Breakthrough Energy", email = "py@contrails.org"},
]
description = "Python library for modeling aviation climate impacts"
keywords = ["contrails", "climate", "aviation", "geospatial"]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
    "Typing :: Typed",
]
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
readme = {file = "README.md", content-type = "text/markdown"}

dependencies = [
    "dask>=2022.3",
    "numpy>=1.22",
    "overrides>=6.1",
    "pandas>=1.4",
    "pyproj>=3.0",
    "scipy>=1.9,<1.10",  # FIXME: To be fixed early 2023
    "xarray>=2022.3",
]
dynamic = ["version"]

[project.urls]
Changelog = "https://py.contrails.org/changelog.html"
Documentation = "https://py.contrails.org"
Issues = "https://github.com/contrailcirrus/pycontrails/issues"
Repository = "https://github.com/contrailcirrus/pycontrails"

[project.optional-dependencies]
# All non-development dependencies
complete = [
    "pycontrails[ecmwf]",
    "pycontrails[gcp]",
    "pycontrails[gfs]",
    "pycontrails[jupyter]",
    "pycontrails[vis]",
    "pycontrails[zarr]",
]

# Development dependencies
dev = [
    "black>=22",
    "black[jupyter]",
    "dep_license",
    "fastparquet>=0.8",
    "ipdb>=0.13",
    "isort>=5.4",
    "memory_profiler",
    "mypy>=0.99",
    "mypy-extensions>=0.4",
    "platformdirs>=3.0",
    "pre-commit>=2.10",
    "psutil",
    "pyarrow>=5.0",
    "pydocstyle>=6.1",
    "pytest>=6.1",
    "pytest-cov>=2.11",
    "requests>=2.25",
    "ruff>=0.0.259",
]

# Documentation / Sphinx dependencies
docs = [
    "doc8>=1.1",
    "furo>=2023.3",
    "myst-parser>=1.0",
    "nb-clean>=2.4",
    "nbsphinx>=0.8",
    "nbval",
    "sphinx>=4.2",
    "sphinx-autobuild>=0.7",
    "sphinxcontrib-bibtex>=2.2",
    "sphinx_copybutton>=0.5",
    "sphinxext.opengraph>=0.8",
]

# ECMWF datalib interfaces
ecmwf = [
    "cdsapi>=0.4",
    "cfgrib>=0.9",
    "eccodes>=1.4",
    "ecmwflibs>=0.4",
    "ecmwf-api-client>=1.6",
    "netcdf4>=1.6.1",
    "platformdirs>=3.0",
    "requests>=2.25",
]

# Google Cloud Platform caching interface
gcp = [
    "google-cloud-storage>=2.1",
    "platformdirs>=3.0",
    "tqdm>=4.61",
]

# GFS datalib interfaces
gfs = [
    "boto3>=1.20",
    "cfgrib>=0.9",
    "eccodes>=1.4",
    "platformdirs>=3.0",
    "tqdm>=4.61",
]

# Jupyter notebook and lab interface
jupyter = [
    "ipywidgets>=7.6",
    "jupyterlab>=2.2",
]

# Polyhedra contruction methods
open3d = [
    "open3d>=0.14",
]

# Polygon construction methods and plotting support 
vis = [
    "matplotlib>=3.3",
    "scikit-learn>=0.23",
    "scikit-image>=0.18",
    "seaborn>=0.11",
    "shapely>=2.0",
]

# Load data from remote Zarr stores
zarr = [
    "fsspec>=2022.7.1",
    "zarr>=2.12",
]

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
license-files = ["LICENSE", "NOTICE"]

# Note that setuptools-scm changes some of the default behavior of setuptools
# In particular, everything tracked by git is included in the source distribution (sdist)
# We exclude the docs and tests directories from wheel distributions
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html#finding-simple-packages
# https://github.com/pypa/setuptools_scm#file-finders-hook-makes-most-of-manifestin-unnecessary
[tool.setuptools.packages.find]
exclude = ["docs*", "tests*"]

# https://mypy.readthedocs.io/en/stable/installed_packages.html#creating-pep-561-compatible-packages
[tool.setuptools.package-data]
"pycontrails" = ["py.typed"]
"pycontrails.models.emissions" = ["static/*.csv"]

# https://github.com/pypa/setuptools_scm/
[tool.setuptools_scm]
write_to = "pycontrails/_version.py"

# mypy static type checking
# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
# disallow_any_generics = true  # TOOD: support this in the future
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = false
show_error_codes = true

# # --strict
# disallow_untyped_calls = true
# disallow_subclassing_any = true
# disallow_incomplete_defs = true
# disallow_untyped_decorators = true
# no_implicit_optional = true
# warn_unused_ignores = true
# warn_return_any = true
# implicit_reexport = false
# strict_equality = true
# # --strict end

# black code formatting
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
[tool.black]
line-length = 100
preview = true

# isort import formatting
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
[tool.isort]
profile = "black"
line_length = 100

# pytest
# https://docs.pytest.org/en/7.1.x/reference/customize.html
[tool.pytest.ini_options]
doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE",
    "NUMBER"
]
filterwarnings = [
    "error::UserWarning",
    "error::RuntimeWarning",
    "ignore:`np.bool8` is a deprecated alias:DeprecationWarning:skimage.util.dtype",
    "ignore:'cgi' is deprecated and slated:DeprecationWarning:google.cloud.storage.blob",
    "ignore:Engine 'cfgrib' loading failed:RuntimeWarning:xarray.backends.plugins",
]
testpaths = ["tests/unit"]

# docstring linter
# https://www.pydocstyle.org/en/stable/usage.html#configuration-files
[tool.pydocstyle]
ignore = [
    "D105",
    "D107",
    "D202",
    "D203",
    "D212",
    "D213",
    "D402",
    "D413",
]
ignore_decorators = "overrides"

# license check
# https://github.com/abduhbm/dep-license
[tool.deplic]
banned = [
    "AGPL-3.0",
    "GPL",
    "AGPL",
]

# RST linter
# https://github.com/pycqa/doc8
[tool.doc8]
max-line-length = 100
ignore-path = [
    "docs/changelog.rst",
    "docs/contributing.rst",
    "docs/api/*",
    "docs/_build/*"
]

# Python linter
# https://beta.ruff.rs/docs/
[tool.ruff]
line-length = 100
ignore = ["E402"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"docs/conf.py" = ["E501"]
