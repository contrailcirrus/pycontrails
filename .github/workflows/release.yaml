# https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml

name: Release

on:
  release:
    types:
      - published

  workflow_dispatch:

# disable all permissions at the top level
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions: {}

jobs:
  check-main-test-status:
    runs-on: ubuntu-latest
    steps:
      - name: OS Dependencies
        run: sudo apt-get install -y curl jq

      - uses: actions/checkout@v4

      - name: Check main test status
        run: make main-test-status

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://cibuildwheel.readthedocs.io/en/stable/options/#testing
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16
        env:
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: '*-win32 *-manylinux_i686 *-musllinux*'
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_TEST_SKIP: '*-macosx_arm64'
          # Completely isolate tests to prevent cibuildwheel from importing the
          # source instead of the wheel. This happens when tests/__init__.py is read.
          CIBW_TEST_EXTRAS: "complete,dev"
          CIBW_TEST_COMMAND: >
            mv {project}/pycontrails {project}/pycontrails-bak &&
            python -m pytest {project}/tests -vv &&
            mv {project}/pycontrails-bak {project}/pycontrails

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi_test:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          verify-metadata: true

  upload_pypi:
    if: ${{ github.event_name == 'release'}}
    needs: [build_wheels, build_sdist, check-main-test-status]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          verify-metadata: true
