# https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml

name: Release

on:
  release:
    types:
      - published
    branches:
      - main
  
  workflow_dispatch:

jobs:
  check-main-test-status:
    runs-on: ubuntu-latest
    steps:
    - name: OS Dependencies
      run: sudo apt-get install -y curl jq

    - uses: actions/checkout@v3

    - name: Check main test status
      run: make main-test-status

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-11]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.1
      env:
        CIBW_BUILD: cp39-* cp310-* cp311-*
        CIBW_BUILD_VERBOSITY: 3

    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install build
      run: python -m pip install build

    - name: Build sdist
      run: python -m build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist, check-main-test-status]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verbose: true
        verify-metadata: true

    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'release' }
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
        verify-metadata: true
